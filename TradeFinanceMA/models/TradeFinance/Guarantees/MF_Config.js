/*
    This is an auto generated file and any modifications to it may result in corrupted data.
*/
define([], function() {
	var mappings = {
		"beneficiaryName": "beneficiaryName",
		"productType": "productType",
		"billType": "billType",
		"guaranteesReference": "guaranteesReference",
		"createdOn": "createdOn",
		"status": "status",
		"amount": "amount",
		"issueDate": "issueDate",
		"expiryDate": "expiryDate",
		"expiryType": "expiryType",
		"modeOfTransaction": "modeOfTransaction",
		"advisingBank": "advisingBank",
		"customerId": "customerId",
		"instructingParty": "instructingParty",
		"applicantParty": "applicantParty",
		"currency": "currency",
		"expectedIssueDate": "expectedIssueDate",
		"claimExpiryDate": "claimExpiryDate",
		"expiryCondition": "expiryCondition",
		"extendExpiryDate": "extendExpiryDate",
		"extensionPeriod": "extensionPeriod",
		"extensionCapPeriod": "extensionCapPeriod",
		"notificationPeriod": "notificationPeriod",
		"extensionDetails": "extensionDetails",
		"governingLaw": "governingLaw",
		"otherInstructions": "otherInstructions",
		"beneficiaryType": "beneficiaryType",
		"recieverInstructions": "recieverInstructions",
		"beneficiaryAddress1": "beneficiaryAddress1",
		"beneficiaryAddress2": "beneficiaryAddress2",
		"city": "city",
		"state": "state",
		"country": "country",
		"zipCode": "zipCode",
		"saveBeneficiary": "saveBeneficiary",
		"swiftCode": "swiftCode",
		"bankName": "bankName",
		"iban": "iban",
		"localCode": "localCode",
		"bankAddress1": "bankAddress1",
		"bankAddress2": "bankAddress2",
		"bankCity": "bankCity",
		"bankState": "bankState",
		"bankCountry": "bankCountry",
		"bankZipCode": "bankZipCode",
		"accountType": "accountType",
		"chargesAccount": "chargesAccount",
		"comissionAccount": "comissionAccount",
		"cashMargin": "cashMargin",
		"instructionCurrencies": "instructionCurrencies",
		"limitInstructions": "limitInstructions",
		"otherBankInstructions": "otherBankInstructions",
		"messageToBank": "messageToBank",
		"documentReferences": "documentReferences",
		"documentName": "documentName",
		"clauseConditions": "clauseConditions",
		"guaranteesSRMSId": "guaranteesSRMSId",
		"beneficiaryDetails": "beneficiaryDetails",
		"totalAmount": "totalAmount",
		"guaranteesReferenceNo": "guaranteesReferenceNo",
		"clauseType": "clauseType",
		"clauseDescription": "clauseDescription",
		"clauseTitle": "clauseTitle",
		"id": "id",
		"clauseId": "clauseId",
		"message": "message",
		"historyCount": "historyCount",
		"amendmentHistory1": "amendmentHistory1",
		"amendmentHistory2": "amendmentHistory2",
		"amendmentHistory3": "amendmentHistory3",
		"amendmentHistory4": "amendmentHistory4",
		"amendmentHistory5": "amendmentHistory5",
		"reasonForReturned": "reasonForReturned",
		"amendmentSRMSRequestId": "amendmentSRMSRequestId",
		"applicableRules": "applicableRules",
		"demandAcceptance": "demandAcceptance",
		"partialDemandPercentage": "partialDemandPercentage",
		"deliveryInstructions": "deliveryInstructions",
		"guaranteeAndSBLCType": "guaranteeAndSBLCType",
		"reasonForReturn": "reasonForReturn",
		"corporateUserName": "corporateUserName",
		"amendCharges": "amendCharges",
		"serviceRequestTime": "serviceRequestTime",
		"returnHistory": "returnHistory",
		"amendmentNo": "amendmentNo",
		"isSingleSettlement": "isSingleSettlement",
	};

	Object.freeze(mappings);

	var typings = {
		"beneficiaryName": "string",
		"productType": "string",
		"billType": "string",
		"guaranteesReference": "string",
		"createdOn": "string",
		"status": "string",
		"amount": "string",
		"issueDate": "string",
		"expiryDate": "string",
		"expiryType": "string",
		"modeOfTransaction": "string",
		"advisingBank": "string",
		"customerId": "string",
		"instructingParty": "string",
		"applicantParty": "string",
		"currency": "string",
		"expectedIssueDate": "string",
		"claimExpiryDate": "string",
		"expiryCondition": "string",
		"extendExpiryDate": "string",
		"extensionPeriod": "string",
		"extensionCapPeriod": "string",
		"notificationPeriod": "string",
		"extensionDetails": "string",
		"governingLaw": "string",
		"otherInstructions": "string",
		"beneficiaryType": "string",
		"recieverInstructions": "string",
		"beneficiaryAddress1": "string",
		"beneficiaryAddress2": "string",
		"city": "string",
		"state": "string",
		"country": "string",
		"zipCode": "string",
		"saveBeneficiary": "string",
		"swiftCode": "string",
		"bankName": "string",
		"iban": "string",
		"localCode": "string",
		"bankAddress1": "string",
		"bankAddress2": "string",
		"bankCity": "string",
		"bankState": "string",
		"bankCountry": "string",
		"bankZipCode": "string",
		"accountType": "string",
		"chargesAccount": "string",
		"comissionAccount": "string",
		"cashMargin": "string",
		"instructionCurrencies": "string",
		"limitInstructions": "string",
		"otherBankInstructions": "string",
		"messageToBank": "string",
		"documentReferences": "string",
		"documentName": "string",
		"clauseConditions": "string",
		"guaranteesSRMSId": "string",
		"beneficiaryDetails": "string",
		"totalAmount": "string",
		"guaranteesReferenceNo": "string",
		"clauseType": "string",
		"clauseDescription": "string",
		"clauseTitle": "string",
		"id": "string",
		"clauseId": "number",
		"message": "string",
		"historyCount": "string",
		"amendmentHistory1": "string",
		"amendmentHistory2": "string",
		"amendmentHistory3": "string",
		"amendmentHistory4": "string",
		"amendmentHistory5": "string",
		"reasonForReturned": "string",
		"amendmentSRMSRequestId": "string",
		"applicableRules": "string",
		"demandAcceptance": "string",
		"partialDemandPercentage": "string",
		"deliveryInstructions": "string",
		"guaranteeAndSBLCType": "string",
		"reasonForReturn": "string",
		"corporateUserName": "string",
		"amendCharges": "string",
		"serviceRequestTime": "string",
		"returnHistory": "string",
		"amendmentNo": "string",
		"isSingleSettlement": "string",
	}

	Object.freeze(typings);

	var primaryKeys = [
					"guaranteesReference",
	];

	Object.freeze(primaryKeys);

	var config = {
		mappings: mappings,
		typings: typings,
		primaryKeys: primaryKeys,
		serviceName: "TradeFinance",
		tableName: "Guarantees"
	};

	Object.freeze(config);

	return config;
})